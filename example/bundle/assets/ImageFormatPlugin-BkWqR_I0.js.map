{"version":3,"file":"ImageFormatPlugin-BkWqR_I0.js","sources":["../../../src/three/plugins/images/ImageFormatPlugin.js"],"sourcesContent":["import { Mesh, MeshBasicMaterial, PlaneGeometry } from 'three';\n\nexport const TILE_X = Symbol( 'TILE_X' );\nexport const TILE_Y = Symbol( 'TILE_Y' );\nexport const TILE_LEVEL = Symbol( 'TILE_LEVEL' );\n\n// Base class for supporting tiled images with a consistent size / resolution per tile\nexport class ImageFormatPlugin {\n\n\tget tiling() {\n\n\t\treturn this.imageSource.tiling;\n\n\t}\n\n\tconstructor( options = {} ) {\n\n\t\tconst {\n\t\t\tpixelSize = 0.01,\n\t\t\tcenter = false,\n\t\t\tuseRecommendedSettings = true,\n\t\t\timageSource = null,\n\t\t} = options;\n\n\t\tthis.priority = - 10;\n\t\tthis.tiles = null;\n\n\t\t// tiling scheme\n\t\tthis.imageSource = imageSource;\n\n\t\t// options\n\t\tthis.pixelSize = pixelSize;\n\t\tthis.center = center;\n\t\tthis.useRecommendedSettings = useRecommendedSettings;\n\n\t}\n\n\t// Plugin functions\n\tinit( tiles ) {\n\n\t\tif ( this.useRecommendedSettings ) {\n\n\t\t\ttiles.errorTarget = 1;\n\t\t\t// TODO: apply skip traversal settings here once supported, as well, for faster loading\n\n\t\t}\n\n\t\tthis.tiles = tiles;\n\n\t\tthis.imageSource.fetchOptions = tiles.fetchOptions;\n\t\tthis.imageSource.fetchData = ( url, options ) => {\n\n\t\t\ttiles.invokeAllPlugins( plugin => url = plugin.preprocessURL ? plugin.preprocessURL( url, null ) : url );\n\t\t\treturn tiles.invokeOnePlugin( plugin => plugin !== this && plugin.fetchData && plugin.fetchData( url, options ) );\n\n\t\t};\n\n\t}\n\n\tasync loadRootTileSet() {\n\n\t\tconst { tiles, imageSource } = this;\n\t\tlet url = tiles.rootURL;\n\t\ttiles.invokeAllPlugins( plugin => url = plugin.preprocessURL ? plugin.preprocessURL( url, null ) : url );\n\t\tawait imageSource.init( url );\n\n\t\treturn this.getTileset( url );\n\n\t}\n\n\tasync parseToMesh( buffer, tile, extension, uri, abortSignal ) {\n\n\t\tif ( abortSignal.aborted ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Construct texture\n\t\tconst tx = tile[ TILE_X ];\n\t\tconst ty = tile[ TILE_Y ];\n\t\tconst level = tile[ TILE_LEVEL ];\n\t\tconst texture = await this.imageSource.processBufferToTexture( buffer );\n\n\t\t// clean up the texture if it's not going to be used.\n\t\tif ( abortSignal.aborted ) {\n\n\t\t\ttexture.dispose();\n\t\t\ttexture.image.close();\n\t\t\treturn null;\n\n\t\t}\n\n\t\tthis.imageSource.setData( tx, ty, level, texture );\n\n\t\t// Construct mesh\n\t\tlet sx = 1, sy = 1;\n\t\tlet x = 0, y = 0, z = 0;\n\n\t\tconst boundingBox = tile.boundingVolume.box;\n\t\tif ( boundingBox ) {\n\n\t\t\t[ x, y, z ] = boundingBox;\n\t\t\tsx = boundingBox[ 3 ];\n\t\t\tsy = boundingBox[ 7 ];\n\n\t\t}\n\n\t\t// adjust the geometry transform itself rather than the mesh because it reduces the artifact errors\n\t\t// when using batched mesh rendering.\n\t\tconst mesh = new Mesh( new PlaneGeometry( 2 * sx, 2 * sy ), new MeshBasicMaterial( { map: texture, transparent: true } ) );\n\t\tmesh.position.set( x, y, z );\n\n\t\treturn mesh;\n\n\t}\n\n\tpreprocessNode( tile ) {\n\n\t\t// generate children\n\t\tconst { tiling } = this;\n\t\tconst maxLevel = tiling.maxLevel;\n\t\tconst level = tile[ TILE_LEVEL ];\n\t\tif ( level < maxLevel && tile.parent !== null ) {\n\n\t\t\tthis.expandChildren( tile );\n\n\t\t}\n\n\t}\n\n\tdisposeTile( tile ) {\n\n\t\tconst tx = tile[ TILE_X ];\n\t\tconst ty = tile[ TILE_Y ];\n\t\tconst level = tile[ TILE_LEVEL ];\n\t\tconst { imageSource } = this;\n\t\tif ( imageSource.has( tx, ty, level ) ) {\n\n\t\t\t// only dispose of the image data if it hasn't been aborted\n\t\t\timageSource.release( tx, ty, level );\n\n\t\t}\n\n\t}\n\n\t// Local functions\n\tgetTileset( baseUrl ) {\n\n\t\tconst { tiling, tiles } = this;\n\t\tconst minLevel = tiling.minLevel;\n\t\tconst { tileCountX, tileCountY } = tiling.getLevel( minLevel );\n\n\t\t// generate all children for the root\n\t\tconst children = [];\n\t\tfor ( let x = 0; x < tileCountX; x ++ ) {\n\n\t\t\tfor ( let y = 0; y < tileCountY; y ++ ) {\n\n\t\t\t\tconst child = this.createChild( x, y, minLevel );\n\t\t\t\tif ( child !== null ) {\n\n\t\t\t\t\tchildren.push( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate tile set\n\t\tconst tileset = {\n\t\t\tasset: {\n\t\t\t\tversion: '1.1'\n\t\t\t},\n\t\t\tgeometricError: 1e5,\n\t\t\troot: {\n\t\t\t\trefine: 'REPLACE',\n\t\t\t\tgeometricError: 1e5,\n\t\t\t\tboundingVolume: this.createBoundingVolume( 0, 0, - 1 ),\n\t\t\t\tchildren,\n\n\t\t\t\t[ TILE_LEVEL ]: - 1,\n\t\t\t\t[ TILE_X ]: 0,\n\t\t\t\t[ TILE_Y ]: 0,\n\t\t\t}\n\t\t};\n\n\t\ttiles.preprocessTileSet( tileset, baseUrl );\n\n\t\treturn tileset;\n\n\t}\n\n\tgetUrl( x, y, level ) {\n\n\t\treturn this.imageSource.getUrl( x, y, level );\n\n\t}\n\n\tcreateBoundingVolume( x, y, level ) {\n\n\t\tconst { center, pixelSize, tiling } = this;\n\t\tconst { pixelWidth, pixelHeight } = tiling.getLevel( tiling.maxLevel );\n\n\t\t// calculate the world space bounds position from the range\n\t\tconst [ minX, minY, maxX, maxY ] = level === - 1 ? tiling.getFullBounds( true ) : tiling.getTileBounds( x, y, level, true );\n\t\tlet extentsX = ( maxX - minX ) / 2;\n\t\tlet extentsY = ( maxY - minY ) / 2;\n\t\tlet centerX = minX + extentsX;\n\t\tlet centerY = minY + extentsY;\n\t\tif ( center ) {\n\n\t\t\tcenterX -= 0.5;\n\t\t\tcenterY -= 0.5;\n\n\t\t}\n\n\t\t// scale the fields\n\t\tcenterX *= pixelWidth * pixelSize;\n\t\textentsX *= pixelWidth * pixelSize;\n\n\t\tcenterY *= pixelHeight * pixelSize;\n\t\textentsY *= pixelHeight * pixelSize;\n\n\t\t// return bounding box\n\t\treturn {\n\t\t\tbox: [\n\t\t\t\t// center\n\t\t\t\tcenterX, centerY, 0,\n\n\t\t\t\t// x, y, z half vectors\n\t\t\t\textentsX, 0.0, 0.0,\n\t\t\t\t0.0, extentsY, 0.0,\n\t\t\t\t0.0, 0.0, 0.0,\n\t\t\t],\n\t\t};\n\n\t}\n\n\tcreateChild( x, y, level ) {\n\n\t\tconst { pixelSize, tiling } = this;\n\t\tif ( ! tiling.getTileExists( x, y, level ) ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// the scale ration of the image at this level\n\t\tconst { pixelWidth, pixelHeight } = tiling.getLevel( tiling.maxLevel );\n\t\tconst { pixelWidth: levelWidth, pixelHeight: levelHeight } = tiling.getLevel( level );\n\t\tconst geometricError = pixelSize * ( Math.max( pixelWidth / levelWidth, pixelHeight / levelHeight ) - 1 );\n\n\t\t// Generate the node\n\t\treturn {\n\t\t\trefine: 'REPLACE',\n\t\t\tgeometricError: geometricError,\n\t\t\tboundingVolume: this.createBoundingVolume( x, y, level ),\n\t\t\tcontent: {\n\t\t\t\turi: this.getUrl( x, y, level ),\n\t\t\t},\n\t\t\tchildren: [],\n\n\t\t\t// save the tile params so we can expand later\n\t\t\t[ TILE_X ]: x,\n\t\t\t[ TILE_Y ]: y,\n\t\t\t[ TILE_LEVEL ]: level,\n\t\t};\n\n\t}\n\n\texpandChildren( tile ) {\n\n\t\tconst level = tile[ TILE_LEVEL ];\n\t\tconst x = tile[ TILE_X ];\n\t\tconst y = tile[ TILE_Y ];\n\n\t\tfor ( let cx = 0; cx < 2; cx ++ ) {\n\n\t\t\tfor ( let cy = 0; cy < 2; cy ++ ) {\n\n\t\t\t\tconst child = this.createChild( 2 * x + cx, 2 * y + cy, level + 1 );\n\t\t\t\tif ( child ) {\n\n\t\t\t\t\ttile.children.push( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n"],"names":["TILE_X","TILE_Y","TILE_LEVEL","ImageFormatPlugin","options","pixelSize","center","useRecommendedSettings","imageSource","tiles","url","plugin","buffer","tile","extension","uri","abortSignal","tx","ty","level","texture","sx","sy","x","y","z","boundingBox","mesh","Mesh","PlaneGeometry","MeshBasicMaterial","tiling","maxLevel","baseUrl","minLevel","tileCountX","tileCountY","children","child","tileset","pixelWidth","pixelHeight","minX","minY","maxX","maxY","extentsX","extentsY","centerX","centerY","levelWidth","levelHeight","cx","cy"],"mappings":"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"}